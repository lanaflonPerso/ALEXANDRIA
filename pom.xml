<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Migration to java 11: -->
  <!-- https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/ -->

  <!-- =============================================================== -->
  <!-- Project informations -->
  <!-- =============================================================== -->
  <!-- ===== Maven Informations ===== -->
  <groupId>com.alexandria</groupId>
  <artifactId>alexandria</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <!-- ===== General Informations ===== -->
  <name>alexandria</name>
  <description>
    La super application qui sert à faire ceci/cela...
  </description>
  <url>http://localhost:8080/ALEXANDRIA</url>
  <inceptionYear>2019</inceptionYear>

  <!-- ===== Organisation ===== -->
  <organization>
    <name>Josselin Lebahar</name>
    <url>https://yanomami.synology.me</url>
  </organization>

  <!-- =============================================================== -->
  <!-- Generic properties -->
  <!-- =============================================================== -->
  <properties>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <!-- Is only intended for maven-plugin projects but not for non maven-plugin projects.
  For such purposes you should use the maven-enforcer-plugin -->
  <!-- Fix for versions-maven-plugin / mvn versions:display-plugin-updates -->
  <!-- versions-maven-plugin doesn't recognize minimum Maven version with the maven-enforcer-plugin (bug) -->
  <prerequisites>
    <maven>3.3</maven>
  </prerequisites>

  <!-- =============================================================== -->
  <!-- Modules -->
  <!-- =============================================================== -->
  <modules>
    <module>alexandria-back</module>
    <module>alexandria-webapp</module>
    <module>alexandria-consumer</module>
  </modules>

  <!-- =============================================================== -->
  <!-- Dependencies Repositories -->
  <!-- =============================================================== -->
  <!-- Need to specify dependencies repositories only for Darcula Look&Feel dependency which is in Spring repository -->
  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <!-- For Darcula Look&Feel dependency -->
    <repository>
      <id>spring-repo</id>
      <name>Spring Repository</name>
      <url>http://repo.spring.io/plugins-release/</url>
    </repository>
  </repositories>

  <!-- =============================================================== -->
  <!-- Plugins Repositories --> <!-- Not essential, only to make symmetric to dependencies repositories -->
  <!-- =============================================================== -->
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>

  <!-- =============================================================== -->
  <!-- Dependencies management -->
  <!-- =============================================================== -->
  <dependencyManagement>
    <dependencies>
      <!-- ===== Modules ===== -->
      <dependency>
        <groupId>com.alexandria</groupId>
        <artifactId>alexandria-back</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>com.alexandria</groupId>
        <artifactId>alexandria-webapp</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>com.alexandria</groupId>
        <artifactId>alexandria-consumer</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>

      <!-- ===== Bibliothèques tierces ===== -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.5.0-M1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <!-- To avoid during runtime :
        org.hibernate.HibernateException: java.lang.IllegalArgumentException: max size attribute is mandatory
        Use hibernate-core instead of hibernate-agroal -->
        <!-- <artifactId>hibernate-agroal</artifactId> -->
        <artifactId>hibernate-core</artifactId>
        <version>5.4.2.Final</version>
      </dependency>
      <dependency>
        <groupId>com.microsoft.sqlserver</groupId>
        <artifactId>mssql-jdbc</artifactId>
        <version>7.2.1.jre11</version>
      </dependency>
      <dependency>
        <groupId>org.jdesktop</groupId>
        <artifactId>beansbinding</artifactId>
        <version>1.2.1</version>
      </dependency>
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.24.1-GA</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>3.2.10</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.3.2</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.4.0-b180830.0359</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jaxb</groupId>
        <artifactId>jaxb-runtime</artifactId>
        <version>2.4.0-b180830.0438</version>
      </dependency>
      <dependency>
        <groupId>com.bulenkov</groupId>
        <artifactId>darcula</artifactId>
        <version>2018.2</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j18-impl</artifactId>
        <version>2.11.2</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>4.0.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>2.0.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>6.1.0.Alpha4</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.taglibs</groupId>
        <artifactId>taglibs-standard-spec</artifactId>
        <version>1.2.5</version>
      </dependency>
      <dependency>
        <groupId>org.apache.taglibs</groupId>
        <artifactId>taglibs-standard-impl</artifactId>
        <version>1.2.5</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- =============================================================== -->
  <!-- Build -->
  <!-- =============================================================== -->
  <build>

    <!-- =============================================================== -->
    <!-- Build Plugins Management -->
    <!-- =============================================================== -->
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->

      <!-- =============================================================== -->
      <!-- Build Plugins -->
      <!-- =============================================================== -->
      <plugins>
        <!-- This plugin helps finding the latest plugin or dependency versions for your modules.
        Open up the terminal and execute this command to find the plugin versions you have to update:
        mvn versions:display-plugin-updates
        mvn versions:display-dependency-updates -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>
        <!-- See https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.3</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <release>${java.version}</release>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <!-- For surefire and failsafe plugins we add an additional argument to allow all reflection access for third party libraries -->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M3</version>
          <configuration>
            <argLine>
              --illegal-access=permit
            </argLine>
          </configuration>
        </plugin>
        <!-- For surefire and failsafe plugins we add an additional argument to allow all reflection access for third party libraries -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M3</version>
          <configuration>
            <argLine>
              --illegal-access=permit
            </argLine>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>2.1.3.RELEASE</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
