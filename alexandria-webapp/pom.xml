<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- =============================================================== -->
    <!-- Project informations -->
    <!-- =============================================================== -->
    <!-- ===== Maven Informations ===== -->
    <parent>
        <artifactId>alexandria</artifactId>
        <groupId>com.alexandria</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>alexandria-webapp</artifactId>
    <packaging>war</packaging>

    <!-- ===== General Informations ===== -->
    <name>alexandria-webapp</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <!-- =============================================================== -->
    <!-- Generic properties -->
    <!-- =============================================================== -->
    <properties>
        <!-- Le nom "public" de l'application -->
        <application.name>My little library</application.name>
        <!-- Le format à utiliser pour afficher la date du build -->
        <maven.build.timestamp.format>dd/MM/yyyy</maven.build.timestamp.format>
        <!-- Propriété servant à contourner le bug du non remplacement
             de la propriété maven.build.timestamp lors du filtrage des ressources -->
        <buildTimestamp>${maven.build.timestamp}</buildTimestamp>
    </properties>

    <!-- =============================================================== -->
    <!-- Dependencies -->
    <!-- =============================================================== -->
    <dependencies>
        <!-- ===== Modules ===== -->
        <dependency>
            <groupId>com.alexandria</groupId>
            <artifactId>alexandria-business</artifactId>
        </dependency>

        <!-- ===== Bibliothèques tierces ===== -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-impl</artifactId>
        </dependency>
        <!-- Spring framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
    </dependencies>

    <!-- =============================================================== -->
    <!-- Build -->
    <!-- =============================================================== -->
    <build>
        <finalName>alexandria-webapp</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp/WEB-INF/jsp</directory>
                            <targetPath>WEB-INF/jsp</targetPath>
                            <includes>
                                <include>_include/header.jspf</include>
                                <include>_include/footer.jspf</include>
                                <include>about.jsp</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <!-- https://www.baeldung.com/executable-jar-with-maven -->
            <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/usage.html -->
            <!-- Require Maven 3.2+ -->
            <!-- mvn clean package spring-boot:repackage -->
            <!-- mvn spring-boot:run -> Application runs in an exploded form -->
<!--            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    &lt;!&ndash; In order to execute mvn spring-boot:run &ndash;&gt;
                    <mainClass>${start-class}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>
</project>
